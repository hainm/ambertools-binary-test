language: cpp

# blocklist
branches:
  except:
    - circleci
    - master

matrix:
  include:
     - { os: osx, env: PYTHON_VERSION=2.7 conda=False TEST_TASK=fast } # conda=False is tested on circleci?
     - { os: osx, env: PYTHON_VERSION=2.7 conda=False TEST_TASK=serial.MM.0 }
     - { os: osx, env: PYTHON_VERSION=2.7 conda=False TEST_TASK=serial.MM.1 }
     - { os: osx, env: PYTHON_VERSION=2.7 conda=False TEST_TASK=serial.QMMM.0 }
     - { os: osx, env: PYTHON_VERSION=2.7 conda=False TEST_TASK=serial.QMMM.1 }
     - { os: osx, env: PYTHON_VERSION=2.7 conda=False TEST_TASK=serial.sander.SEBOMD }
     - { os: osx, env: PYTHON_VERSION=2.7 conda=False TEST_TASK=mmpbsa }
     - { os: osx, env: PYTHON_VERSION=2.7 conda=False TEST_TASK=pbsa }
     - { os: osx, env: PYTHON_VERSION=2.7 conda=False TEST_TASK=rism }

sudo: true

before_install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - bash setup.sh # stuff from ambertools-ci-base
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      shell_session_update() { echo "Overriding shell_session_update"; };
    fi

install:
    - export at_tarfile=osx-64.ambertools-18.dev.py27.tar
    - source devtools/ci/load_functions.sh
    # - pip install requests && python $HOME/ambertools-binary-build/conda_tools/download_binary_at_dev.py --osx
    - python $HOME/ambertools-binary-build/conda_tools/download_binary_at_dev.py --osx
    - mv ${at_tarfile} $HOME && cd $HOME && tar -xf ${at_tarfile}
    - setup_ambertools # from load_functions

script:
    - run_tests # from load_functions

after_success:
    - echo "Congrats. Happy computing"

notifications:
  email:
    recipients:
      - amberbot.2017@gmail.com
    on_success: never # default: change
    on_failure: always
